worker_processes 1;

user nginx nginx;

events {
  worker_connections 1024;
  accept_mutex off;
}

http {
  # nginx will find this file in the config directory set at nginx build time
  include mime.types;

  # fallback in case we can't determine a type
  default_type application/octet-stream;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay off;

  # gzip compression
  gzip on;
  gzip_http_version 1.0;
  gzip_proxied any;
  gzip_min_length 500;
  gzip_disable "MSIE [1-6]\.";
  gzip_types text/plain text/html text/xml text/css
             text/comma-separated-values
             text/javascript text/json
             application/x-javascript
             application/javascript application/json
             application/atom+xml;

  upstream unicorn {
    server unix:{{ deploy_app_dir }}/current/tmp/sockets/unicorn.sock fail_timeout=0;
  }

  server {
    listen 80;
    server_name _;

    client_max_body_size 10m;
    keepalive_timeout 5;

    # path for static files
    root {{ deploy_app_dir }}/current/public;

    # Prefer to serve static files directly from nginx to avoid unnecessary
    # data copies from the application server.
    try_files $uri/index.html $uri.html $uri @unicorn;

    location @unicorn {
      # an HTTP header important enough to have its own Wikipedia entry:
      #   http://en.wikipedia.org/wiki/X-Forwarded-For
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # pass the Host: header from the client right along so redirects
      # can be set properly within the Rack application
      proxy_set_header Host $http_host;

      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;

      proxy_pass http://unicorn;
    }

    # rails error pages
    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root {{ deploy_app_dir }}/current/public;
    }
  }
}

# TODO Split out sites from conf
