worker_processes 1;

user nginx nginx;

events {
  worker_connections 1024;
  accept_mutex off;
}

http {
  # server header will not include the nginx version.
  server_tokens off;

  # nginx will find this file in the config directory set at nginx build time
  include mime.types;

  # fallback in case we can't determine a type
  default_type application/octet-stream;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay off;

  # cache
  proxy_cache_path /var/cache/nginx/proxy levels=1:2 keys_zone=default:10m max_size=2G inactive=7d;
  proxy_temp_path /var/tmp/nginx/proxy;

  # don't do anything fancy with redirects
  proxy_redirect off;

  # forward identication headers upstream
  proxy_set_header Host $http_host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

  # gzip compression
  gzip on;
  gzip_proxied any;
  gzip_min_length 500;
  gzip_disable "MSIE [1-6]\.";
  gzip_vary on;
  gzip_types text/plain text/css text/javascript application/x-javascript application/javascript application/json;

  upstream unicorn {
    server unix:{{ deploy_app_dir }}/current/tmp/sockets/unicorn.sock fail_timeout=0;
  }

  server {
    listen 80;
    server_name _;

    client_max_body_size 10m;
    keepalive_timeout 5;

    # path for static files
    root {{ deploy_app_dir }}/current/public;

    try_files $uri/index.html $uri.html $uri @unicorn;

    location ~ ^/(assets)/  {
      gzip_static on;
      expires max;
      add_header Cache-Control public;
    }

    location @unicorn {
      proxy_cache default;
      proxy_pass http://unicorn;
    }

    # rails error pages
    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root {{ deploy_app_dir }}/current/public;
    }
  }
}

# TODO Split out sites from conf
